% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cell-addr.R, R/ra-ref.R
\name{as.ra_ref.cell_addr}
\alias{as.ra_ref}
\alias{as.ra_ref.cell_addr}
\alias{as.ra_ref.character}
\title{Convert to a ra_ref object}
\usage{
\method{as.ra_ref}{cell_addr}(x, ...)

as.ra_ref(x, ...)

\method{as.ra_ref}{character}(x, fo = NULL, warn = TRUE, ...)
}
\arguments{
\item{x}{a cell reference}

\item{...}{other arguments passed along to methods}

\item{fo}{Optional specification of the cell reference format of the string
\code{x}. If given, it must be either "A1" or "R1C1"; it can usually be
inferred.}

\item{warn}{Logical, requesting a warning if a file or worksheet name is
found in the string, since this cannot be represented in a
\code{\link{ra_ref}} object and will be dropped.}
}
\value{
a \code{\link{ra_ref}} object
}
\description{
Convert various representations of a cell reference into an object of class
\code{\link{ra_ref}}.
}
\section{Methods (by class)}{
\itemize{
\item \code{cell_addr}: Convert a \code{cell_addr} into a \code{\link{ra_ref}}

\item \code{character}: Convert the string representation of a single cell
reference into a \code{\link{ra_ref}}
}}
\examples{
ca <- cell_addr(2, 5)
as.ra_ref(ca)

ca <- cell_addr(1:3, 1)
\dontrun{
## won't work because as.ra_ref methods not natively vectorized
as.ra_ref(ca)
}
## but it's easy enough to do with Vectorize
f <- Vectorize(as.ra_ref, USE.NAMES = FALSE, SIMPLIFY = FALSE)
f(ca)
as.ra_ref("$F$2")
as.ra_ref("R[-4]C3")

\dontrun{
## this won't work because column ref is relative
as.ra_ref("D$4")

## this is actually ambiguous! is format A1 or R1C1 format?
as.ra_ref("RC2")
## format must be specified in this case
as.ra_ref("RC2", fo = "R1C1")
}

cs <- c("$A$1", "$F$14")
\dontrun{
## won't work because as.ra_ref methods not natively vectorized
as.ra_ref(cs)
}
## but it's easy enough to do with Vectorize
f <- Vectorize(as.ra_ref, USE.NAMES = FALSE, SIMPLIFY = FALSE)
f(cs)
}

